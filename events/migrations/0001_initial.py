# Generated by Django 5.1.6 on 2025-03-16 20:28

import django.db.models.deletion
import django.utils.timezone
import recurrence.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('demographic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('is_special', models.BooleanField(default=False)),
                ('rsvp_form_needed', models.BooleanField(default=False, help_text='If selected, a registration form will be produced.<br>Note: Used only when special is selected.')),
                ('payment_upload_needed', models.BooleanField(default=False, help_text='If selected, payment would be required for registration.<br>Note: Used only when RSVP form is selected.')),
                ('speakers', models.TextField(blank=True, help_text="Provide the names of speakers, separated by ', '.<br>Note that this is only applicable when the 'special' field is selected.", null=True)),
                ('hashtags', models.TextField(blank=True, help_text="All hashtags should be separated by spaces, like this: '#GOD #JESUS'. Please note that this format is only used when the 'special' field is selected.", null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('recurrence', recurrence.fields.RecurrenceField(blank=True, help_text='Set recurrence rules for the event. Leave empty for one-time events.', null=True)),
                ('start_time', models.TimeField(default=django.utils.timezone.now, help_text='Start time of the event.')),
                ('end_time', models.TimeField(default=django.utils.timezone.now, help_text='End time of the event.')),
                ('location', models.CharField(help_text='Location of the event.', max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event/')),
                ('link', models.URLField(blank=True, help_text='Keep this space empty until the live link is obtained.', null=True)),
                ('demographic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demographic.demographic')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unique_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('proof', models.ImageField(blank=True, upload_to='registration/')),
                ('comment', models.TextField()),
                ('confirmed', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='QRCodeToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.registration')),
            ],
        ),
    ]
